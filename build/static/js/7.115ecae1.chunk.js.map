{"version":3,"sources":["components/styles/filterStyles.js","fetcher/fetchdata.js","constant.js","components/filter.js"],"names":["styles","makeStyles","theme","filterList","backgroundColor","border","borderRadius","width","padding","margin","breakpoints","up","filterListWrapper","display","justifyContent","flexDirection","alignItems","filterListContent","flexWrap","filterListHeader","fontSize","yearButton","fetchlaunchData","url","params","callback","a","axios","get","response","status","data","filterOptions","ColorButton","withStyles","root","color","palette","getContrastText","green","primary","main","secondary","contrastText","transition","Button","React","memo","props","onUpdateFilterData","onUpdateLoadState","classes","years","boolOptions","useState","year","setYear","launch","setLaunch","landing","setLanding","match","useRouteMatch","console","log","handleFilterYearCLick","selected","type","paramVal","land","luanch","useEffect","limit","launch_year","launch_success","land_success","ignore","res","length","className","style","fontWeight","map","yea","key","variant","onClick","option"],"mappings":"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","file":"static/js/7.115ecae1.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\n\nexport const styles = makeStyles(theme=>({\n         filterList: {\n           backgroundColor: \"rgb(253, 249, 244)\",\n           border: \"1px solid #c2c3c4\",\n           borderRadius: \"2px\",\n           width: \"90%\",\n           padding: \"30px\",\n           margin: \"10px\",\n            [theme.breakpoints.up(\"sm\")]:{\n              width:\"auto\"\n            }\n         },\n         filterListWrapper: {\n           display: \"flex\",\n           justifyContent: \"space-around\",\n           flexDirection: \"column\",\n           alignItems: \"center\",\n         },\n         filterListContent: {\n           display: \"flex\",\n           flexDirection: \"row\",\n           flexWrap: \"wrap\",\n           width: \"221px\",\n           justifyContent: \"space-between\",\n         },\n         filterListHeader: {\n           fontSize: \"20px\",\n           backgroundColor: \"#cad0d6\",\n         },\n         yearButton:{\n           display:\"flex\",\n           width:100\n         },\n       }));","import axios from \"axios\";\n/**\n * A generic function to make the api request using axios\n *\n * @url {string}  : The url which is to be passed\n * @params {string}  : The query params for the url\n * @callback {func}  : the callback function to record the data\n */\nexport const fetchlaunchData = async function (url,params,callback) {\n      try {\n        const response = await axios.get(url, {\n          params: params,\n      \n        });\n        if (response.status === 200) {\n          callback(response.data)\n        }\n      } catch (error) {\n        throw error;\n      } finally {\n      }\n    };\n","export const filterOptions = {\n  boolOptions: [\"true\", \"false\"],\n  years: [\n    \"2006\",\n    \"2007\",\n    \"2008\",\n    \"2009\",\n    \"2010\",\n    \"2011\",\n    \"2012\",\n    \"2013\",\n    \"2014\",\n    \"2015\",\n    \"2016\",\n    \"2017\",\n    \"2018\",\n    \"2019\",\n    \"2020\",\n  ],\n};\n","import React, { useState, useEffect } from \"react\";\nimport { styles } from \"./styles/filterStyles\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport { green, red } from \"@material-ui/core/colors\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { fetchlaunchData } from \"../fetcher/fetchdata\";\nimport { filterOptions } from \"../constant\";\n\nconst ColorButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    borderRadius: 5,\n    width: 75,\n    margin: \"10px auto\",\n    \"&:hover\": {\n      backgroundColor: green[700],\n    },\n    \"&.active\": {\n      backgroundColor: theme.palette.primary.main,\n      color: `${theme.palette.secondary.contrastText}!important`,\n      transition: \"border-radius .15s cubic-bezier(0.4,0.0,0.2,1)\",\n    },\n  },\n}))(Button);\n\n/*\n * Filter component:\n *  year/land/launch handle change and data is updated on\n *  filter change and latest data from the api is stored in the state \n * constant data for year and boolean option is stored in constant.js file\n */\n\nfunction Filter(props) {\n  const { onUpdateFilterData, onUpdateLoadState } = props;\n  const classes = styles();\n  const url = `https://api.spacexdata.com/v3/launches`;\n  const { years, boolOptions } = filterOptions;\n  const [year, setYear] = useState(null);\n  const [launch, setLaunch] = useState(null);\n  const [landing, setLanding] = useState(null);\n\n  const match = useRouteMatch();\n  // const history = useHistory();\n  console.log('%câ§­', 'color: #cc0088', match);\n  const handleFilterYearCLick = (selected, type) => () => {\n    const paramVal = { ...match.params };\n    // const uri = match.url.includes(`/launches/`) && `/launches/`;\n    if (type === \"year\") {\n      setYear(selected);\n      paramVal.year = selected;\n    }\n    if (type === \"land\") {\n      setLanding(selected);\n      paramVal.land = selected;\n    }\n    if (type === \"luanch\") {\n      setLaunch(selected);\n      paramVal.luanch = selected;\n    }\n    \n  };\n\n  useEffect(() => {\n    let params = { limit: 100 };\n    if (year) {\n      params = { ...params, launch_year: year };\n    }\n    if (launch !== null) {\n      params = { ...params, launch_success: launch };\n    }\n    if (landing !== null) {\n      params = { ...params, land_success: landing };\n    }\n    let ignore = false;\n\n    onUpdateLoadState(true);\n    fetchlaunchData(url, params, (res) => {\n      if(res.length>0){\n\n        if (!ignore) {\n          onUpdateFilterData(res);\n        }\n      }else{\n          onUpdateFilterData(null);       \n      }\n      onUpdateLoadState(false);\n    });\n    return () => {\n      ignore = true;\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [landing, launch, year]);\n\n  return (\n    <div className={classes.filterList}>\n     \n      <div className={classes.filterListWrapper}>\n        <div style={{fontWeight: \"bolder\",fontSize:\"20px\"}}>Launch Year</div>\n        <div className={classes.filterListContent}>\n          {years &&\n            years.map((yea) => {\n              return (\n                <div key={yea} className={classes.yearButton}>\n                  <ColorButton\n                    variant=\"contained\"\n                    color=\"primary\"\n                    key={yea}\n                    className={year === yea ? \"active\" : false}\n                    onClick={handleFilterYearCLick(yea, \"year\")}\n                  >\n                    {yea}\n                  </ColorButton>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n      <div className={classes.filterListWrapper}>\n        <div style={{fontWeight: \"bolder\",fontSize:\"20px\"}}>Successful Launch</div>\n        <div className={classes.filterListContent}>\n          {boolOptions &&\n            boolOptions.map((option) => (\n              <div key={option} className={classes.yearButton}>\n                <ColorButton\n                  variant=\"contained\"\n                  color=\"primary\"\n                  key={option}\n                  className={launch === option ? \"active\" : false}\n                  onClick={handleFilterYearCLick(option, \"luanch\")}\n                >\n                  {option}\n                </ColorButton>\n              </div>\n            ))}\n        </div>\n      </div>\n      <div className={classes.filterListWrapper}>\n        <div style={{fontWeight: \"bolder\",fontSize:\"20px\"}}>Successful Landing</div>\n        <div className={classes.filterListContent}>\n          {boolOptions &&\n            boolOptions.map((option) => (\n              <div key={option} className={classes.yearButton}>\n                <ColorButton\n                  variant=\"contained\"\n                  color=\"primary\"\n                  key={option}\n                  className={landing === option ? \"active\" : false}\n                  onClick={handleFilterYearCLick(option, \"land\")}\n                >\n                  {option}\n                </ColorButton>\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default React.memo(Filter);\n"],"sourceRoot":""}